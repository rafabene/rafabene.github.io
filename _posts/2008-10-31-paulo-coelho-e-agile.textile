---
title: Paulo Coelho é Agile ?
---
<p align="justify">Hoje lendo os meus feeds diários através do <a href="http://www.google.com.br/reader/" target="_blank">Google Reader</a>, me deparei com uma postagem do <a href="http://www.paulocoelho.com/" target="_blank">Paulo Coelho</a> em <a href="http://colunas.g1.com.br/paulocoelho/" target="_blank">seu Blog</a> :</p><p align="justify"><a title="Permanent Link: Da obsessão" rel="bookmark" href="http://colunas.g1.com.br/paulocoelho/2008/10/31/da-obsessao/">Da obsessão</a></p><div align="justify">					
									
</div><div align="justify">
</div><p align="justify"><img hspace="15" vspace="0" border="0" align="left" src="http://www.ilcollediscipio.it/images/paulo_coelho.jpg" />"<b><i>O medo de errar, na maior parte das vezes, termina nos conduzindo ao próprio erro. </i></b></p><div align="justify">
</div><p align="justify"><b><i>Certo rei encomendou aos geógrafos um mapa do país. Mas exigiu que tal mapa fosse perfeito com todos os detalhes.</i></b></p><p align="justify"><b><i>Os geógrafos mediram todos os locais, e fizeram um rascunho. Um deles comentou que ainda faltavam detalhes de rios. Resolveram refazer o desenho numa escala bem maior. Quando ficou pronto, o mapa estava do tamanho do primeiro andar de um edifício.</i></b></p><div align="justify">
</div><p align="justify"><b><i>Mesmo assim, alguns conselheiros do rei argumentaram: “não dá para
ver os caminhos nos bosques”. E os sábios foram desenhando mapas cada vez maiores, com mais acidentes geográficos do país. Quando, enfim, chegaram ao mapa que queriam, não conseguiram mais lê-lo: era tão grande que ocupava um deserto inteiro.</i></b>"</p>

Foi inevitável a comparação/lembrança/analogia com os modelos de desenvolvimento que focam no BDUF - <a target="_blank" href="http://en.wikipedia.org/wiki/Big_Design_Up_Front">Big Design Up Front</a> . Aqui em Brasília e imagino que ainda em muitos lugares do Brasil e quem sabe do mundo, ainda acreditam que para evitar quaisquer surpresas no desenvolvimento do software, é muito importante ultra-super-especificar o software de maneira tão obsessiva que por um segundo eu chego a acreditar que o documento vai compilar e executar.

Por mais que <a target="_blank" href="http://blog.aspercom.com.br/2008/06/23/agilistas-tem-escopo/">os conselheiros digam</a> que <i>"não dá para ver os caminhos nos bosques"</i>, muitas empresas gastam muito tempo - algumas vezes (50% ou mais do tempo total do projeto: do fechamento do contrato até a entrega para o cliente) - colocando um bom profissional (<a target="_blank" href="http://en.wikipedia.org/wiki/Aka">aka</a> projetista) para fazer um modelo tão próximo do real que se ele tivesse implementado o software, este poderia ser entregue.

Claro que existe um argumento: Só é preciso ter um profissional sênior na equipe que diga o que fazer enquanto os "<i>orelhas</i>" (<a target="_blank" href="http://en.wikipedia.org/wiki/Aka">aka</a> implementadores/desenvolvedores/codificadores/programadores) fazem o código. Isto é muito comum de se perceber, quando olhamos anúncios de vagas para estágios onde oferecem R$ 700,00 para graduandos que conheçam: Struts, Swing, JSF, Hibernate, Spring, Jboss, EJb, JMS, Linux, Inglês, e experiência. É o capitalismo! Capitalismo burro! Diga-se de passagem. Uma empresa com uma equipe diversificada combartilhando seus conhecimentos através de práticas como o pair programming e ainda utilizando as demais <a href="http://searchsoftwarequality.techtarget.com/news/article/0,,sid92_gci1285731,00.html" target="_blank">práticas ágeis podem aumentar significamente o ROI</a>.

<p>Voltando ao assunto: O cliente não precisa de um "modelo" perfeito com todos os detalhes de um software. <a href="http://blog.aspercom.com.br/2007/11/14/entreguesoftwarefuncionando/" target="_blank">Ele quer o software funcionando</a>! Uma equipe "evoluída" também não precisa de um "mapa perfeito": Muitas vez ele  é <i>"tão grande que ocupa um deserto inteiro"</i>. Prefiro muito mais <a target="_blank" href="http://blog.fragmental.com.br/2008/07/25/uh-eme-ele/">um profissional usando seus conhecimentos para construir código do que construir "o mapa perfeito"</a>. Não podemos deixar o medo de errar conduzir ao próprio erro!</p><p> </p>