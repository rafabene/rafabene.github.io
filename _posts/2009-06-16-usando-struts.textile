---
title: Usando Struts ???
---
<p>Recentemente meu contrato no cliente entrou na reta final. Aqui em Brasília, grande parte da atuação dos profissionais de TI tem como cliente final o Governo. Por este motivo algumas questões contratuais (prazos, extensão, valores, renovação) fogem do controle deste profissionais e gestores.</p><p>Sendo assim, durante este processo de (in-?)definição por parte do cliente, estou atuando como <a target="_blank" href="http://pt.wikipedia.org/wiki/Freelancer">freelancer</a> em outro cliente. Projeto novo, com antigos amigos. Uma excelente oportunidade para aprender mais um framework: <a target="_blank" href="http://struts.apache.org/2.x/">Struts 2</a>.</p><p>Já utilizei-o (como <a target="_blank" href="http://pt.wikipedia.org/wiki/Prova_de_Conceito">PoC</a>) na época do <a target="_blank" href="http://www.opensymphony.com/webwork/">Webwork</a> onde já era claro sua superioridade em relação ao Struts 1.x. </p><p>Aproveito para tocar em um assunto que há bastante tempo penso em falar mas que na verdade é bastante polêmico. Que o Struts 1.x foi um dos primeiros frameworks MVC para Java e que ainda hoje existe vários legados feitos com Struts, isto não tenha dúvidas! Entretanto é preciso "abrir os olhos" para o mercado e para as inovações tecnológicas que o acompanham. Já em 2004, o Carlos Vilela, vulgo <a target="_blank" href="http://www.lixo.org/">CV</a>, hoje atual consultor da <a target="_blank" href="http://www.thoughtworks.com/">ThoughtWorks</a>, disse a celebre frase: <a target="_blank" href="http://www.guj.com.br/posts/list/18258.java#95466">Toda vez que voce usa Struts, Deus mata um bebe
foca. Pense nas pobres foquinhas, e parem de usar esse lixo. Por
favooooooooooooooooooor.</a> </span></p><p><span class="postbody">Hoje o mercado está repleto de frameworks WEB/JAVA de qualidade: <a target="_blank" href="http://seamframework.org/">JBoss Seam</a>, <a target="_blank" href="http://wicket.apache.org/">Wicket</a>, <a target="_blank" href="http://struts.apache.org/2.x/">Struts 2</a>, <a target="_blank" href="http://www.vraptor.com.br/">VRaptor</a>, etc. Muitos deles utilizando <a target="_blank" href="http://java.sun.com/javase/6/docs/technotes/guides/language/annotations.html">anotações</a> evitando o famigerado "XML Hell", além da possibilidade de usar injeção de dependência ( e outjeção no caso do Seam), abstração de invocações Ajax, além de <a target="_blank" href="http://livedemo.exadel.com/richfaces-demo/index.jsp">inúmeros componentes visuais "prontos"</a>.  A idéia central é que quanto mais abstrações ao redor da complexidade, melhor será a produtividade da equipe e com uma menor curva de aprendizado.</span></p>

<p>Sabemos que o Struts 1.x possui uma "abstração pobre" e que conseqüentemente não foi capaz de acompanhar a evolução dos outros frameworks. Agora me respondam uma coisa: Por quê projetos NOVOS hoje em dia ainda utilizam o Struts 1.x? Acredito que a resposta seja um misto de preguiça de atualizar-se (para profissionais) com um elevado teor de uma conservação <a target="_blank" href="http://pt.wikipedia.org/wiki/Nonsense"><i>nonsense</i></a> (por parte dos gestores de TI/Projetos/etc).</span></p>

No outro lado da balança está a infame síndrome do <i><a href="http://en.wikipedia.org/wiki/Not_Invented_Here" target="_blank">Not invented here</a></i> (não inventado aqui) com a propagação de frameworks caseiros. 

Frameworks caseiros não são arquiteturas de referência, não são
padronizados, não possuem uma comunidade em volta para dar apoio e não
são padrões da insdústria de software. Construir frameworks caseiros
com o <a target="_blank" href="http://www.guj.com.br/posts/list/67068.java">dinheiro público</a> é o pior caso de todos. (<a href="http://www.rafaelcarneiro.net/blog/2008/05/23/frameworks-agindo-com-bom-senso/" target="_blank">Rafael Carneiro</a>). 

Vejam que estou falando de frameworks, onde quase nunca se leva em consideração <a target="_blank" href="http://denisyomura.blogspot.com/2008/10/princpio-aberto-fechado.html">open/closed principle - OCP</a> já que o objetivo é solucionar um problema específico. O que fazer então? Não crie um framework do zero, mas estenda as funcionalidades de um framework existente ( que possui toda uma comunidade trabalhando para você ) criando componentes para estes. Este é o principal motivo que o <a target="_blank" href="/2008/07/01/aumentando-a-produtividade-com-jsf"/>XSeam</a> é chamado de <b>conjunto de componentes visuais e não visuais para o JBoss Seam Framework</b> e não é chamado de framework por si só como algumas pessoas sugeriram erradamente.</p><p>Por fim, recomendo a leitura dos slides da apresentação <b>O Struts morreu - Como escolher um novo framework Web</b> realizada por Alessandro Coelho Ribeiro que está disponível em seu site: <a target="_blank" href="http://www.integritas.com.br/palestra-riojug.pdf">http://www.integritas.com.br/palestra-riojug.pdf</a></p><p></p>